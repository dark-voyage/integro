import json
import fasttext
import re
import os

os.chdir("/Users/a.orzikulov/Desktop/GitHub/Integro")

import util
from util.convert_helpers import (TRANSLATOR, STOP_SYMBOLS, VOWELS, 
                                  change_e, change_ts)

util.main()
file_path = "output-13-8-2021.json"
with open(file_path, "r", encoding="UTF-8") as file:
    data = json.load(file)

LANGUAGE_MODEL_PATH = '../lid.176.bin'
model = fasttext.load_model(LANGUAGE_MODEL_PATH)

def multiple_replace(pairs, string):
    def replace(m):
        return next(
            replacement
            for (pattern, replacement), group in zip(pairs.items(), m.groups())
            if group is not None
        )
    patterns = '|'.join("({})".format(pattern) for pattern in pairs)
    return re.sub(patterns, replace, string)


REPLACEMENTS = {r"[ (]?[Hh]ttps?[:%]\S+\s?": "",
                r"\n": " ",
                u"\U0001f1fa\U0001f1ff": "",
                r"@\S+\s?": "",
                r"#\S+\s?": "", 
                u"\u2757": "",
                u"\u200b": "",
                u"Actual News\U0001f1fa\U0001f1ff": "", # uz flag
                u"–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞üá∫üáøüá∫üáøüá∫üáø": ""}

russian_texts = []
uzbek_texts = []
# for posts in data.values():
for post_text in data["https://t.me/Buka_tumani"].values():     ################################ posts
    if not any([post_text == "None", post_text == "", post_text is None]):
        post_text = multiple_replace(REPLACEMENTS, post_text)
        prediction, score = model.predict(post_text)
        if prediction[0] == "__label__ru" and score[0] >= 0.8:
            russian_texts.append(post_text)
        else:
            uzbek_texts.append(post_text)

print(len(uzbek_texts))
print(len(russian_texts))

with open("../uzbek_texts.txt", "w", encoding="UTF-8") as file:
    for text in uzbek_texts:
        file.writelines(text + "\n")

with open("../russian_texts.txt", "w", encoding="UTF-8") as file:
    for text in russian_texts:
        file.writelines(text + "\n")


with open("links.txt", "w", encoding="UTF-8") as file:
    for key in data:
        file.writelines(key + "\n")


text = "–¢—û—Ö—Ç–∞–Ω–≥! –ë–∏—Ä –Ω–∞—Ä—Å–∞–Ω–∏ —É–Ω—É—Ç–º–∞–Ω–≥: –é–∑–±–µ–∫–∏—Å—Ç–æ–Ω–¥–∞ –º—É–∞–º–º–æ –π—û“õ!  –ê–Ω–∞ —û—à–∞ —Å—É“≥–±–∞—Ç–¥–∞–Ω —Å—û–Ω–≥ –é–∑–±–µ–∫–∏—Å—Ç–æ–Ω–¥–∞–≥–∏ –ø–∞—Ä—Ç–∏—è–ª–∞—Ä “≥–∞“õ–∏–¥–∞ –º–∞—ä–ª—É–º —Ç–∞—Å–∞–≤–≤—É—Ä —à–∞–∫–ª–ª–∞–Ω–∏–± “õ–æ–ª–≥–∞–Ω –º–µ–Ω–¥–∞. –ë—É —Ç–∞—Å–∞–≤–≤—É—Ä–∏–º –∫–µ–π–∏–Ω—á–∞–ª–∏–∫ –∫—û–ø–ª–∞–± –≥—É–≤–æ“≥–ª–∏–∫–ª–∞—Ä –∞—Å–æ—Å–∏–¥–∞ –º—É—Å—Ç–∞“≥–∫–∞–º–ª–∞–Ω–¥–∏.  –î—û—Å—Ç–∏–º –†–∞—Ñ–∞—ç–ª—å –°–∞—Ç—Ç–æ—Ä–æ–≤ Hook Report –Ω–∞—à—Ä–∏ —É—á—É–Ω –±–∏—Ä –º–∞“õ–æ–ª–∞ —Ç–∞–π—ë—Ä–ª–∞–ø—Ç–∏. –ú–µ–Ω–∏–Ω–≥ —Ç–∞—Å–∞–≤–≤—É—Ä–∏–º –≤–∞, —Ñ–∏–∫—Ä–∏–º—á–∞, –∫—û–ø—á–∏–ª–∏–∫ —û–∑–±–µ–∫–∏—Å—Ç–æ–Ω–ª–∏–∫–ª–∞—Ä–Ω–∏–Ω–≥ –ø–∞—Ä—Ç–∏—è–ª–∞—Ä “≥–∞“õ–∏–¥–∞–≥–∏ —Ç–∞—Å–∞–≤–≤—É—Ä–ª–∞—Ä–∏ –∞–∫—Å —ç—Ç–≥–∞–Ω —è—Ö—à–∏ –º–∞“õ–æ–ª–∞ –±—û–ø—Ç–∏. –Ø—Ö—à–∏ –º—É–∞–ª–ª–∏—Ñ–Ω–∏–Ω–≥ –∏—à–∏ —û–∑–∏ —à—É: “≥–∞—ë—Ç–¥–∞ –∫—û—Ä–∏–± —Ç—É—Ä–≥–∞–Ω –Ω–∞—Ä—Å–∞–ª–∞—Ä–∏–º–∏–∑–Ω–∏ —á–∏—Ä–æ–π–ª–∏ “õ–∏–ª–∏–± —Ç–∞—Å–≤–∏—Ä–ª–∞–± –±–µ—Ä–∏—à, —Ç–æ–∫–∏ —û“õ—É–≤—á–∏ ‚Äú–∏–µ, “≥–∞“õ–∏“õ–∞—Ç–∞–Ω —à—É–Ω–¥–∞–π!‚Äù –¥–µ–± —é–±–æ—Ä—Å–∏–Ω. –Ø—Ö—à–∏ –º—É–∞–ª–ª–∏—Ñ –¥–æ–∏–º “≥–∞–º —è–Ω–≥–∏ –±–∏–ª–∏–º –±–µ—Ä–º–∞–π–¥–∏, –±–∞–ª–∫–∏ —û“õ—É–≤—á–∏–¥–∞–≥–∏ –±–∏–ª–∏–º–ª–∞—Ä–Ω–∏ —Ç–∞—Å–¥–∏“õ–ª–∞–±, –º—É—Å—Ç–∞“≥–∫–∞–º–ª–∞–± –±–µ—Ä–∞–¥–∏.  –•—É–ª–ª–∞—Å, –º–∞“õ–æ–ª–∞–Ω–∏–Ω–≥ “õ–∏—Å“õ–∞—á–∞ –º–∞–∑–º—É–Ω–∏–Ω–∏ –∫–µ–ª—Ç–∏—Ä–∞–º–∞–Ω.  –ü–∞—Ä—Ç–∏—è–ª–∞—Ä –±—É—Ç—É–Ω –¥—É–Ω—ë–¥–∞ —Ñ—É“õ–∞—Ä–æ–ª–∞—Ä–Ω–∏ –º–∞—ä–ª—É–º “ì–æ—è–ª–∞—Ä –∞—Ç—Ä–æ—Ñ–∏–¥–∞ –±–∏—Ä–ª–∞—à—Ç–∏—Ä–∏—à, —Å—û–Ω–≥ –±—É “ì–æ—è–ª–∞—Ä–Ω–∏ —Å–∏—ë—Å–∏–π –º–∞–π–¥–æ–Ω–≥–∞"
text = re.sub(r"\s", " ", text)

fixed_message = ""
for idx, character in enumerate(text):
    if character == "–ï" or character == "–µ":
        fixed_message += change_e(
            idx, text, TRANSLATOR, STOP_SYMBOLS, VOWELS)
    elif character == "–¶" or character == "—Ü":
        fixed_message += change_ts(
            idx, text, TRANSLATOR, STOP_SYMBOLS, VOWELS)
    elif character in TRANSLATOR:
        fixed_message += TRANSLATOR[character]
    else:
        fixed_message += character

fixed_message
